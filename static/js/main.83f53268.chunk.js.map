{"version":3,"sources":["context.js","components/layout/Navbar.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/UpdateContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Navbar","branding","className","href","to","defaultProps","Contact","showContactInfo","showOnClick","e","deleteOnClick","a","delete","console","error","name","email","phone","style","cursor","onClick","color","float","bind","marginRight","split","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","number","newContact","post","history","push","UpdateContact","updateContact","match","params","put","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.83f53268.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb03 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {\" \"}\r\n          {branding}{\" \"}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home mr-1\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/contacts/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus mr-1\" />\r\n                Add Contact\r\n              </Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question mr-1\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  branding: \"My Application\"\r\n};\r\n\r\nNavbar.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  showOnClick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  deleteOnClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users${id}`);\r\n\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (error) {\r\n      console.error(error, \"JSON Placeholder Fake API doesn't let you delete\");\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3 mt-2\">\r\n              <h4>\r\n                {\" \"}\r\n                {name}{\" \"}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.showOnClick}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\r\n                  onClick={this.deleteOnClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`/contacts/update/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    {\" \"}\r\n                    Number: {phone.split(\" \")[0]}{\" \"}\r\n                  </li>\r\n                  <li className=\"list-group-item\"> Email: {email} </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">Contact List</h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          className={classnames(\"form-control form-control-lg\", {\r\n            \"is-invalid\": error\r\n          })}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\"> {error} </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, phone, email } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { number: \"Phone number is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      phone,\r\n      email\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // Clear data\r\n    this.setState({\r\n      name: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, phone, email, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 mt-2\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Number\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Number...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.number}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass UpdateContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      phone: contact.phone,\r\n      email: contact.email\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, phone, email } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { number: \"Phone number is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      phone,\r\n      email\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Clear data\r\n    this.setState({\r\n      name: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, phone, email, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 mt-2\">\r\n              <div className=\"card-header\">Update Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Number\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Number...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.number}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateContact;\r\n","import React from \"react\";\r\n\r\nconst About = props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About React Contact Manager </h1>\r\n      <p className=\"lead\"> App to manage contacts</p>\r\n      <p className=\"text-secondary\"> Version 1.0.0 </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {\" \"}\r\n        <span className=\"text-danger\">404</span> Not Found{\" \"}\r\n      </h1>\r\n      <p className=\"lead\"> Sorry, that page does not exist </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport UpdateContact from \"./components/contacts/UpdateContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Navbar branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contacts/add\" component={AddContact} />\n              <Route\n                exact\n                path=\"/contacts/update/:id\"\n                component={UpdateContact}\n              />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}